<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />

    <title>Secure PGP Key Sync - A Proposal</title>
    <meta name="description" content="" />

    <meta name="HandheldFriendly" content="True" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link rel="shortcut icon" href="../../../favicon.ico">

    <link rel="stylesheet" type="text/css" href="../../../assets/css/screen.css?v=415208d92b" />
    <link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=Merriweather:300,700,700italic,300italic|Open+Sans:700,400" />

    <!-- Google Analytics -->
    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-52535674-2', 'auto');
      ga('send', 'pageview');

    </script>

    <link rel="canonical" href="secure-pgp-key-sync-a-proposal/index.html" />
    <meta name="referrer" content="origin" />
    
    <meta property="og:site_name" content="Whiteout Networks" />
    <meta property="og:type" content="article" />
    <meta property="og:title" content="Secure PGP Key Sync - A Proposal" />
    <meta property="og:description" content="In today&#x27;s multi device world it&#x27;s absolutely mandatory that the user&#x27;s data be available on all screens at all times. Yet secure email protocols such as PGP were designed more than 20 years ago. This means that for encrypted email..." />
    <meta property="og:url" content="http://blog.whiteout.io/2014/07/07/secure-pgp-key-sync-a-proposal/" />
    <meta property="article:published_time" content="2014-07-07T13:27:45.000Z" />
    <meta property="article:modified_time" content="2015-02-04T18:39:13.000Z" />
    <meta property="article:tag" content="Security" />
    <meta property="article:tag" content="Privacy" />
    
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:title" content="Secure PGP Key Sync - A Proposal" />
    <meta name="twitter:description" content="In today&#x27;s multi device world it&#x27;s absolutely mandatory that the user&#x27;s data be available on all screens at all times. Yet secure email protocols such as PGP were designed more than 20 years ago. This means that for encrypted email..." />
    <meta name="twitter:url" content="http://blog.whiteout.io/2014/07/07/secure-pgp-key-sync-a-proposal/" />
    
    <script type="application/ld+json">
{
    "@context": "http://schema.org",
    "@type": "Article",
    "publisher": "Whiteout Networks",
    "author": {
        "@type": "Person",
        "name": "Tankred Hase",
        "image": "http://blog.whiteout.io/content/images/2015/02/tankred-1.jpg",
        "url": "http://blog.whiteout.io/author/tankred",
        "sameAs": "https://whiteout.io",
        "description": "Our company was founded in 2013 in Munich. Our mission is to provide secure email that is easy to use and runs on all devices."
    },
    "headline": "Secure PGP Key Sync - A Proposal",
    "url": "http://blog.whiteout.io/2014/07/07/secure-pgp-key-sync-a-proposal/",
    "datePublished": "2014-07-07T13:27:45.000Z",
    "dateModified": "2015-02-04T18:39:13.000Z",
    "keywords": "Security, Privacy",
    "description": "In today&#x27;s multi device world it&#x27;s absolutely mandatory that the user&#x27;s data be available on all screens at all times. Yet secure email protocols such as PGP were designed more than 20 years ago. This means that for encrypted email..."
}
    </script>

    <meta name="generator" content="Ghost 0.7" />
    <link rel="alternate" type="application/rss+xml" title="Whiteout Networks" href="../../../rss/index.html" />
</head>
<body class="post-template tag-security tag-privacy">

    


<header class="main-header post-head no-cover">
    <nav class="main-nav  clearfix">
        <a class="back-button icon-arrow-left" href="../../../index.html">Home</a>
        <a class="subscribe-button" href="https://whiteout.io">whiteout.io</a>
    </nav>
</header>

<main class="content" role="main">

    <article class="post tag-security tag-privacy">

        <header class="post-header">
            <h1 class="post-title">Secure PGP Key Sync - A Proposal</h1>
            <section class="post-meta">
                <time class="post-date" datetime="2014-07-07">07 July 2014</time>  on <a href="../../../tag/security/index.html">Security</a>, <a href="../../../tag/privacy/index.html">Privacy</a>
            </section>
        </header>

        <section class="post-content">
            <p>In today's multi device world it's absolutely mandatory that the user's data be available on all screens at all times. Yet secure email protocols such as PGP were designed more than 20 years ago. This means that for encrypted email the status quo up until now has basically been: Either you're on the device your key is on or you’re out of luck. Like this poor sap that got an encrypted email on his iPhone:</p>

<p><img src="../../../content/images/2015/02/iPhone-Mail-1.PNG" alt="PGP encrypted message on iPhone" /></p>

<p>Needless to say there are many ways to go about solving this problem. One could simply throw out the last 30 years of protocols like SMTP, IMAP and PGP and reinvent the wheel like <a href="http://darkmail.info/">DarkMail</a>, but we at Whiteout believe in building on existing standards, since they aren't going away any time soon. This does not mean that we don't applaud the important work of creating a modern set of protocols for asynchronous messaging that solve meta-data security and forward secrecy. But given today's landscape, the large-scale adoption of such an approach is years away. In this post we'd like to discuss our approach at tackling multi device encrypted email.</p>

<h2 id="theburdenofkeymanagement">The burden of key management</h2>

<p>Studies have shown time and time again that if users are exposed to the complexities of managing their own keys, many will fail.</p>

<blockquote>
  <p>"Three of the twelve test participants (P4, P9, and P11) accidentally emailed the secret to the team members without encryption. Two of the three (P9 and P11) realized immediately that they had done so, but P4 appeared to believe that the security was supposed to be transparent to him and that the encryption had taken place. In all three cases the error occurred while the participants were trying to figure out the system by exploring." - <em><a href="http://www.gaudior.net/alma/johnny.pdf">Why Johnny Can’t Encrypt: A Usability Evaluation of PGP 5.0</a></em></p>
</blockquote>

<p>This is why we, as a service provider for encrypted email, believe that one major way we can provide value to users is key management. Not only does Whiteout Mail automate public key discovery when typing in a recipient's email address, we also want to make private key management so easy that it becomes basically invisible to users (unless users explicitly want to dig deeper, of course).</p>

<h2 id="whiteoutkeysyncuserexperiencetechnologypreview">Whiteout Key Sync User Experience - Technology Preview</h2>

<p><strong>DISCLAIMER: The following specification as well as the current version of the reference implementation are definitely work in progress and should not yet be considered for production use. We reserve the right to delete private keys from our sync service during the experimental phase in case we need to update our storage format or encryption protocol. We would also very much appreciate any feedback and suggestions. Feel free to <a href="https://twitter.com/whiteoutio">tweet</a> us or drop us <a href="mailto:mail.support@whiteout.io">an email</a> (<a href="https://keys.whiteout.io/mail.support@whiteout.io">PGP Key</a>).</strong></p>

<p>Now that we've got that out of the way, if you're feeling adventurous you can try key sync today by installing the <a href="https://whiteout.io/#product">Whiteout Mail App</a> and syncing your test keys between e.g. your Desktop PC and your Chromebook (Android App coming very soon). The setup process itself borrows heavily from existing products like Firefox Sync and the iCloud keychain from Apple. Both products allow users to sync their passwords and other personal data in an encrypted form.</p>

<p>It's important to note that multi device sync for Whiteout Mail is completely optional. We understand that there are users that would never sync their private PGP key (even in encrypted form) and we absolutely respect that. But if you do want to use Whiteout Mail on multiple devices, then here's what the user experience for Whiteout Key Sync looks like:</p>

<ul>
<li>The user starts Whiteout Mail on the Computer they first installed the app on. Either the app generated a new PGP key pair for the user on initial startup (default behavior for average users and first time PGPers) or the user chose to import an existing PGP key (option for experienced PGP users). The user must then activate <code>Key sync</code> from the menu and is greeted with this setup screen:</li>
</ul>

<p><img src="../../../content/images/2015/02/Keychain-code-setup.png" alt="Key sync setup" /></p>

<p>In this step a random <code>keychain code</code> is generated for the user which is used to encrypt the user’s private key on their computer before sync. From a UX perspective the code basically replaces the private PGP key, as the user must write down the <code>keychain code</code> and keep it in a safe place.</p>

<p>The code is never shared or made available to Whiteout, so we cannot decrypt the user’s PGP key. The idea here is that the long asymmetric PGP key is replaced by a short (but still high-entropy) symmetric key, which can be written down easily and typed into a touch screen. (For all the technical details, please check out the protocol specification at the end of this post.)</p>

<ul>
<li>The user then installs the Whiteout Mail app on a new device. If sync was activated for his account the app will know this and ask the user for a recovery token which is sent to them via Email or SMS:</li>
</ul>

<p><img src="../../../content/images/2015/02/Recovery-token-input-2.png" alt="Recovery token input on Nexus 5" /></p>

<ul>
<li>After the user has been authenticated, they will be asked to provide their keychain code. Upon successful entry, the encrypted private PGP key will be sent to the device, decrypted locally and stored on the device.</li>
</ul>

<p><img src="../../../content/images/2015/02/Keychain-code-input-1.png" alt="Keychain code input on Nexus 5" /></p>

<p>And done! The user can now read and write encrypted messages on multiple devices.</p>

<p><img src="../../../content/images/2015/02/Mail-list-Nexus-5-1.png" alt="Mail list on Nexus 5" /></p>

<p>It's important to note that this setup process is required only once when setting up the new device. This means that the keychain code can conveniently be kept in a safe place and does not have to be with the user at all times.</p>

<p>Now that we've briefly touched what the user experience looks like, here's a  technical overview of the encryption protocol.</p>

<h2 id="whiteoutprivatekeysyncspecification">Whiteout Private Key Sync Specification</h2>

<p>Importing/exporting the user’s private PGP key to their various devices is a challenge on non desktop systems such as iOS, as these system have no USB support. Current solutions such as iPGP can import the user’s private key through Dropbox, but this obviously compromises the private key to a cloud storage provider that the user has no control over. The goal of this specification is to create a secure and easy way to sync the user’s private key over a cloud service that the user does not have to trust completely.</p>

<p>This specification is split up into the various protocol steps required for key sync.</p>

<h3 id="deviceregistration">Device Registration</h3>

<h4 id="scope">Scope</h4>

<ul>
<li>The device configuration protocol MUST NOT allow multiple devices with the same DeviceSecret.</li>
<li>The device configuration protocol MUST NOT allow a device to impersonate another one just with the knowledge of its DeviceSecret.</li>
<li>The device configuration protocol MUST NOT allow a new device to be configured without the possession of the user's keypair.</li>
<li>The device configuration protocol WILL NOT protect a user from a possible rogue server authorizing devices on the user's behalf.</li>
<li>The device configuration protocol WILL NOT protect the user from an attacker stealing the DeviceSecret from the server and impersonating the device for that DeviceSecret.</li>
</ul>

<h4 id="description">Description</h4>

<p>Device registration will exploit the fact that both the user and the server have the user's public key, and the user has the private key. With this knowledge, the server will negotiate a set of random session keys to exchange and authenticate the data sent between the parties.</p>

<p>A device is referenced by its DeviceSecret and memorable DeviceName. The device secret is a globally unique random string with 256 bits of entropy that is generated using a RNG on the device to avoid collisions. The registration will proceed as showed in the flow diagrams below.</p>

<p><img src="../../../content/images/2015/02/diagram_1-1.png" alt="Device secret generation" /></p>

<p><img src="../../../content/images/2015/02/diagram_2-1.png" alt="Device Registration" /></p>

<h3 id="authentication">Authentication</h3>

<h4 id="scope">Scope</h4>

<ul>
<li>The authentication protocol MUST protect the DeviceSecret from being reachable by a third party in transit.</li>
<li>The authentication protocol MUST protect the session keys from being reachable by a third party in transit.</li>
<li>The authentication protocol MUST avoid reusing session keys.</li>
<li>The authentication protocol WILL NOT allow authentication without the user having possession of their key pair.</li>
</ul>

<h4 id="description">Description</h4>

<p>The authentication will exploit the same fact as device registration: using the public key for the user, the server will negotiate a set of session keys to secure future communications. The fact that the user will be able to decrypt the data sent from the server proves that she is the rightful owner of the account.</p>

<p>Authentication will have, along with the random keys, a challenge that the client needs to respond to. The test for the user is to just send the challenge string back to the server, but wrapped with a different encryption method.</p>

<p>Once these steps are complete, both the server and the client will have negotiated keys for this session.</p>

<p><img src="../../../content/images/2015/02/diagram_3-1.png" alt="Authentication" /></p>

<h3 id="keysync">Key Sync</h3>

<h4 id="scope">Scope</h4>

<ul>
<li>The key sync protocol MUST protect the private key from any other party that's not the rightful owner of it, even the server.</li>
</ul>

<h4 id="description">Description</h4>

<p>Key synchronization will be done by uploading the key pair encrypted to the Whiteout cloud storage. The key pair will be encrypted with a randomly generated key which will be presented to the user in the form of a QR code or a string of characters. This set of keys will not be uploaded to the cloud, so the key pair will be secure.</p>

<p>To download the encrypted key pair, the user will request the recovery token that the server assigned to the key at the time of the request. This recovery token will be sent to the user through SMS or email (depending on what is available). With it, the client can download the key pair and use the encryption keys to decipher and import it.</p>

<p><img src="../../../content/images/2015/02/diagram_4-1.png" alt="Key sync" /></p>

<p><img src="../../../content/images/2015/02/diagram_5-2-1.png" alt="Key sync" /></p>

<h3 id="diagramreference">Diagram Reference</h3>

<ul>
<li><strong>Es(key, data)</strong>: Symmetric encrypt with key. </li>
<li><strong>Ea(key, data)</strong>: Asymmetric encrypt data with a public PGP key.</li>
<li><strong>Ds(key, ciphertext)</strong>: Symmetric decrypt ciphertext using key.</li>
<li><strong>Pk</strong>: User’s public PGP key.</li>
<li><strong>session_keys</strong>: random encryption keys generated for a session.</li>
</ul>

<h3 id="cipherselection">Cipher selection</h3>

<h4 id="blockcipherandmessageauthentication">Block cipher and message authentication</h4>

<p>The protocol uses the authenticated <a href="http://en.wikipedia.org/wiki/Galois/Counter_Mode">AES-256-GCM</a> mode for symmetric encryption.</p>

<h4 id="keyderivationforprivatekeyencryption">Key derivation for private key encryption</h4>

<p>The private key is encrypted with a 256 bit symmetric key derived from a high entropy code (which is generated for the user) using <a href="http://en.wikipedia.org/wiki/PBKDF2">PBKDF2-SHA256</a> (10000 iterations, per user random salt).</p>

<h4 id="asymmetriccipher">Asymmetric cipher</h4>

<p>For asymmetric encryption, <a href="http://en.wikipedia.org/wiki/Pretty_Good_Privacy">PGP</a> is used. Key size should be at least 2048 bits.</p>
        </section>

        <footer class="post-footer">


            <figure class="author-image">
                <a class="img" href="../../../author/tankred/index.html" style="background-image: url(../../../content/images/2015/02/tankred-1.jpg)"><span class="hidden">Tankred Hase's Picture</span></a>
            </figure>

            <section class="author">
                <h4><a href="../../../author/tankred/index.html">Tankred Hase</a></h4>

                    <p>Our company was founded in 2013 in Munich. Our mission is to provide secure email that is easy to use and runs on all devices.</p>
                <div class="author-meta">
                    <span class="author-location icon-location">Munich, Germany</span>
                    <span class="author-link icon-link"><a href="https://whiteout.io">https://whiteout.io</a></span>
                </div>
            </section>


            <section class="share">
                <h4>Share this post</h4>
                <a class="icon-twitter" href="https://twitter.com/share?text=Secure%20PGP%20Key%20Sync%20-%20A%20Proposal&amp;via=whiteoutio&amp;url=http://blog.whiteout.io/2014/07/07/secure-pgp-key-sync-a-proposal/"
                    onclick="window.open(this.href, 'twitter-share', 'width=550,height=235');return false;">
                    <span class="hidden">Twitter</span>
                </a>
                <a class="icon-facebook" href="https://www.facebook.com/sharer/sharer.php?u=http://blog.whiteout.io/2014/07/07/secure-pgp-key-sync-a-proposal/"
                    onclick="window.open(this.href, 'facebook-share','width=580,height=296');return false;">
                    <span class="hidden">Facebook</span>
                </a>
                <a class="icon-google-plus" href="https://plus.google.com/share?url=http://blog.whiteout.io/2014/07/07/secure-pgp-key-sync-a-proposal/"
                   onclick="window.open(this.href, 'google-plus-share', 'width=490,height=530');return false;">
                    <span class="hidden">Google+</span>
                </a>
            </section>

        </footer>

    </article>

</main>



    <footer class="site-footer clearfix">
        <section class="copyright"><a href="../../../index.html">Whiteout Networks</a> &copy; 2016</section>
        <section class="poweredby">Proudly published with <a href="https://ghost.org">Ghost</a></section>
    </footer>

    <!-- You can safely delete this line if your theme does not require jQuery -->
<script type="text/javascript" src="https://code.jquery.com/jquery-1.11.3.min.js"></script>

    <script type="text/javascript" src="../../../assets/js/jquery.fitvids.js?v=415208d92b"></script>
    <script type="text/javascript" src="../../../assets/js/index.js?v=415208d92b"></script>

<img src="https://blog.whiteout.io/view.gif?page=/2014/07/07/secure-pgp-key-sync-a-proposal/" alt="" style="display:none" hidden />
</body>
</html>
